МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ
Кафедра програмної інженерії
Звіт
з Практичного заняття № 1
з Скриптових мов програмування




Виконав:                                                                          Перевірив:
ст. гр. ПЗПІ-23-2		                                                              ст. викл. каф. ПІ 
Дешаліт К.О.,                                                                         Сокорчук І.П.



Харків 2025
Практичне заняття 1 

Завдання на практичне заняття: необхідно розробити скрипт мовою bash, що друкуватиме у консоль послідовність символів, позначену як “ялинка”.
Ялинка складається з наступних елементів: двох ярусів, стовбура та шару снігу.
Перший ярус має форму рівнобедреного трикутника, в якого основа складається з непарної кількості символів.
Другий ярус має форму трапеції, яку можна отримати, якщо прибрати з першого ярусу перший рядок, тобто його вершину. 
Всередині обох ярусів та при переході між ними в різних рядках мають чергуватись символи ‘*’ та ‘#’.
Мають виконуватись наступні умови:
-Ширина усіх ярусів на 2 менше, ніж ширина снігу.
-Висота стовбура завжди має значення 2, товщина -- 3.
-Висота ялинки у рядках (включаючи стовбу та шар снігу) та ширина шару снігу в символах вказується в параметрах скрипту.
-Параметри скрипта повинні мати додатнє значення.
-Вказані значення повинні округлятися до потрібних у меншу сторону.
- Якщо за вказаними при запуску скрипта значеннями зобразити ялинку на екрані неможливо,
скрипт повинен вивести у потік помилок сповіщення про неправильне значення аргумента і повернути відповідний результат у батьківський процес.

Під час виконання обов'язково використати конструкції:
-“if ... then ... fi”;  
-“while ... do ... done”;  
-“until ... do ... done”;  
-“for ... in .. do ... done”;  
-“for ((...)); do ... done”;  
-Обов’язково використати функцію.  

Опис вирішення (код програми наведено в додатку А):

Рядок 1 містить текст  “#!/bin/bash”, та вказує, яким інтерпретатором слід виконувати файл.
		Рядки 4-5 перевіряють, що скрипт викликано з необхідними аргументами, якщо це не так - друкується повідомлення про помилку та повертається значення 
		Рядки 9-10 присвоюють значення аргументів змінним h та sw, що мають містити значення висоти та ширини снігу відповідно. Значення одразу округляються вниз до цілого для простішого опрацювання.
		В рядках 12-18 значення h округляється вниз до найближчого парного, значення sw – вниз до найближчого непарного. Парність h випливає з того, що значення sw завжди непарне, а значення h має бути рівно на 1 більшим.
		В рядках 20-23 перевіряється відповідність округлених значень критеріям, описаним в умові. Якщо вони не відповідають критеріям, друкується повідомлення про помилку та повертається значення 1.
	В рядках 25-55 описана функція print_layer, що використовується для друку ярусів.
	В рядках 27-30 обчислюються встановлюються значення локальних змінних функції, в яких зберігаються ширина снігу, кількість рядків повного яруса та рядок, з якого слід починати друкувати.
	В рядках 31-54 за допомогою циклу for поетапно виводиться кожний рядок яруса.
	В рядках 32-38 встановлюються локальні змінні циклу: лічильник для друку символів, кількість пробілів перед символами, поточний символ.
	В рядках 40-44 описаний внутршній цикл, що друкує пробіли.
В рядках 46-50 описаний внутршній цикл, що символи ‘*’ або ‘#’ .
В рядках 57-58 двічі викликається функція print_layer для друку ярусів.
В рядках 60-64 виконується цикл, що друкує два рядки стовбура завдяки функції printf.
В рядках 66-67 за допомогою printf друкується шар снігу та робиться фінальний перехід на новий рядок.

Приклад виклику скрипта: ./pzpi-23-2-deshalit-kyrylo-task1 8.8 7

Приклад виводу для вказаних вище параметрів:

 *
###
*****
 ###
 *****
###
###
*******

Вивід програми відповідає всім вказаним вимогам та успішно виконує розроблені для завдання тести.

Висновок: протягом практичного заняття було виконано скрипт, який виконує нескладний алгоритм з друку в консоль. Під час виконання було закріплено знання щодо синтаксису та можливостей застосування bash-скриптів, поглиблено розуміння особливостей bash на прикладі типових підзадач.



ДОДАТОК А
Код програми

  1 #!/bin/bash
  2
  3
  4 if [ -z "$1" ] || [ -z "$2" ]; then
  5   echo "Unable to print a tree: invalid arguments" >&2
  6   exit 1
  7 fi
  8
  9 h=${1%.*}
 10 sw=${2%.*}
 11
 12 if(( h % 2 == 1 )); then
 13   ((h--))
 14 fi
 15
 16 if (( sw % 2 == 0 )); then
 17   ((sw--))
 18 fi
 19
 20 if (( h < 8 || (h - sw > 2) || (sw > h) )); then
 21   echo "Unable to print a tree: invalid arguments" >&2
 22   exit 1
 23 fi
 24
 25 print_layer()
 26 {
 27   local width=$1
 28   local rows=$(( (width - 1) / 2 ));
 29
 30   local start=$2
 31   for((i = start; i < rows; i++)); do
 32      local j=1
 33      local spaces=$(( (width - 2 * i) / 2 ))
 34      char='*'
 35
 36     if(( ((i % 2) == 1) ^ (((start % 2) == 1) && ((rows % 2) == 0)) )); then
 37       char='#'
 38     fi
 39
 40     while [[ $j -le spaces ]]; do
 41        {
 42            echo  -n ' '
 43            ((j++))
 44         } done
 45
 46      until (( j > (spaces + i * 2 + 1) )); do
 47         {
 48             echo -n "$char"
 49             ((j++))
 50         } done
 51
 52       echo
 53
 54      done
 55 }
 56
 57 print_layer $sw 0
 58 print_layer $sw 1
 59
 60 for i in {1..2}; do
 61   printf '%*s' $(( (sw / 2) - 1 ))
 62   printf '%*s' 3 | tr ' ' '#'
 63   echo
 64 done
 65
 66 printf '%*s' $sw | tr ' ' '*'
 67 echo
 68





